{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","goodsToRender","goods","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","a","b","length","reverse","getReorderedGoods","this","className","role","type","onClick","setState","map","good","Math","random","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACDC,EAnCH,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUD,EACZ,EADYA,WAENK,EAAY,YAAOD,GAgBzB,OAdIH,IAAaL,EAASU,UACxBD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGtDR,IAAaL,EAASe,QACxBN,EAAaE,MAAK,SAACK,EAAGC,GACpB,OAAOD,EAAEE,OAASD,EAAEC,UAIpBd,GACFK,EAAaU,UAGRV,EAeiBW,CAAkBnB,EAAiBoB,KAAKlB,OAE9D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBACEA,UAAU,UACVC,KAAK,YAFP,UAIE,wBACEC,KAAK,SACLF,UAAWD,KAAKlB,MAAME,WAAaL,EAASU,SACxC,iBAAmB,0BACvBe,QAAS,WACP,EAAKC,SAAS,CAAErB,SAAUL,EAASU,SAAUN,YAAY,KAL7D,iCAWA,wBACEoB,KAAK,SACLF,UAAWD,KAAKlB,MAAME,WAAaL,EAASe,OACxC,oBAAsB,6BAC1BU,QAAS,WACP,EAAKC,SAAS,CAAErB,SAAUL,EAASe,OAAQX,YAAY,KAL3D,4BAWA,wBACEoB,KAAK,SACLF,UAAWD,KAAKlB,MAAMC,WAClB,oBAAsB,6BAC1BqB,QAAS,WACP,EAAKC,UAAS,SAACvB,GAAD,MAAY,CAAEC,YAAaD,EAAMC,gBALnD,sBAWEiB,KAAKlB,MAAME,WAAaL,EAASM,MAAQe,KAAKlB,MAAMC,aAEpD,wBACEoB,KAAK,SACLF,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CAAEtB,YAAY,EAAOC,SAAUL,EAASM,QAJ1D,sBAYJ,6BACE,6BACGC,EAAcoB,KAAI,SAAAC,GACjB,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIC,KAAKC,SAAWD,KAAKC,wBApE5C,GAAyBC,aCrDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed3832c5.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => {\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const goodsToRender = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div\n          className=\"buttons\"\n          role=\"directory\"\n        >\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.ALPHABET\n              ? 'button is-info' : 'button is-info is-light'}\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET, isReversed: false });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.LENGTH\n              ? 'button is-success' : 'button is-success is-light'}\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH, isReversed: false });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed\n              ? 'button is-warning' : 'button is-warning is-light'}\n            onClick={() => {\n              this.setState((state) => ({ isReversed: !state.isReversed }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ isReversed: false, sortType: SortType.NONE });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsToRender.map(good => {\n              return (\n                <li\n                  data-cy=\"Good\"\n                  key={Math.random() + Math.random()}\n                >\n                  {good}\n                </li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}