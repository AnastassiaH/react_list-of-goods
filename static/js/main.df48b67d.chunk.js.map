{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","LENGTH","length","reverse","App","state","NONE","componentDidMount","buttons","document","querySelector","addEventListener","target","button","Array","from","children","forEach","el","classList","add","matches","remove","className","type","onClick","setState","this","map","good","Date","now","Math","random","Component","ReactDOM","render","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GA0BzB,OAxBIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAID,EAAIC,EACC,EAGLD,EAAIC,GACE,EAGH,KAIPN,IAAaJ,EAASW,QACxBL,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAEG,OAASF,EAAEE,UAIpBP,GACFC,EAAaO,UAGRP,G,SAzCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAMc,EAAb,4MACEC,MAAQ,CACNV,YAAY,EACZD,SAAUJ,EAASgB,MAHvB,EAMEC,kBAAoB,WAClB,IAAMC,EAAUC,SAASC,cAAc,YAEhC,OAAPF,QAAO,IAAPA,KAASG,iBAAiB,SAAS,YAAiB,IAAdC,EAAa,EAAbA,OACpC,GAAIA,EAAQ,CACV,IAAMC,EAASD,EAEXJ,GACFM,MAAMC,KAAKP,EAAQQ,UAAUC,SAAQ,SAAAC,GACnCA,EAAGC,UAAUC,IAAI,eAIjBP,EAAOQ,QAAQ,YACjBR,EAAOM,UAAUG,OAAO,iBApBlC,4CA0BE,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,WACP,EAAKC,SAAS,CAAEhC,SAAUJ,EAASO,YAJvC,iCAUA,wBACE2B,KAAK,SACLD,UAAU,6BACVE,QAAS,WACP,EAAKC,SAAS,CAAEhC,SAAUJ,EAASW,UAJvC,4BAUA,wBACEuB,KAAK,SACLD,UAAU,6BACVE,QAAS,WACP,EAAKC,UAAS,SAACrB,GAAD,MAAY,CAAEV,YAAaU,EAAMV,gBAJnD,sBAUEgC,KAAKtB,MAAMX,WAAaJ,EAASgB,MAAQqB,KAAKtB,MAAMV,aAEpD,wBACE6B,KAAK,SACLD,UAAU,4BACVE,QAAS,WACP,EAAKC,SAAS,CAAE/B,YAAY,EAAOD,SAAUJ,EAASgB,QAJ1D,sBAYJ,6BACE,6BACGd,EAAkBD,EAAiBoC,KAAKtB,OAAOuB,KAAI,SAAAC,GAClD,OACE,oBAAI,UAAQ,OAAZ,SAAqDA,GAA7BC,KAAKC,MAAQC,KAAKC,wBA9E1D,GAAyBC,aC/DzBC,IAASC,OACP,cAAC,EAAD,IACA3B,SAAS4B,eAAe,W","file":"static/js/main.df48b67d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => {\n      if (a > b) {\n        return 1;\n      }\n\n      if (a < b) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => {\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  componentDidMount = () => {\n    const buttons = document.querySelector('.buttons');\n\n    buttons?.addEventListener('click', ({ target }) => {\n      if (target) {\n        const button = target as HTMLButtonElement;\n\n        if (buttons) {\n          Array.from(buttons.children).forEach(el => {\n            el.classList.add('is-light');\n          });\n        }\n\n        if (button.matches('.button')) {\n          button.classList.remove('is-light');\n        }\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={() => {\n              this.setState((state) => ({ isReversed: !state.isReversed }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ isReversed: false, sortType: SortType.NONE });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => {\n              return (\n                <li data-cy=\"Good\" key={Date.now() + Math.random()}>{good}</li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}