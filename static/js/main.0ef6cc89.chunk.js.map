{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sort","type","reversed","setState","goodsToRender","goods","visibleGoods","ALPHABET","good1","good2","localeCompare","LENGTH","a","b","length","reverse","getReorderedGoods","this","className","role","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,KAAO,WAGD,IAFJC,EAEG,uDAFc,EAAKL,MAAME,SAC5BI,EACG,uDADiB,EAAKN,MAAMC,WAE/B,EAAKM,SAAS,CACZN,WAAYK,EACZJ,SAAUG,KAZhB,4CAgBE,WAAU,IAAD,OACDG,EA7CH,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOD,GAgBzB,OAdIP,IAAaL,EAASc,UACxBD,EAAaN,MAAK,SAACQ,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGtDX,IAAaL,EAASkB,QACxBL,EAAaN,MAAK,SAACY,EAAGC,GACpB,OAAOD,EAAEE,OAASD,EAAEC,UAIpBjB,GACFS,EAAaS,UAGRT,EAyBiBU,CAAkBtB,EAAiBuB,KAAKrB,OAE9D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBACEA,UAAU,UACVC,KAAK,YAFP,UAIE,wBACElB,KAAK,SACLiB,UAAWD,KAAKrB,MAAME,WAAaL,EAASc,SACxC,iBAAmB,0BACvBa,QAAS,WACP,EAAKpB,KAAKP,EAASc,UAAU,IALjC,iCAWA,wBACEN,KAAK,SACLiB,UAAWD,KAAKrB,MAAME,WAAaL,EAASkB,OACxC,oBAAsB,6BAC1BS,QAAS,WACP,EAAKpB,KAAKP,EAASkB,QAAQ,IAL/B,4BAWA,wBACEV,KAAK,SACLiB,UAAWD,KAAKrB,MAAMC,WAClB,oBAAsB,6BAC1BuB,QAAS,WACP,EAAKpB,KAAK,EAAKJ,MAAME,UAAW,EAAKF,MAAMC,aAL/C,sBAWEoB,KAAKrB,MAAME,WAAaL,EAASM,MAAQkB,KAAKrB,MAAMC,aAEpD,wBACEI,KAAK,SACLiB,UAAU,4BACVE,QAAS,WACP,EAAKjB,SAAS,CAAEN,YAAY,EAAOC,SAAUL,EAASM,QAJ1D,sBAYJ,6BACE,6BACGK,EAAciB,KAAI,SAAAC,GACjB,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA9EvB,GAAyBC,aCrDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ef6cc89.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => {\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sort = (\n    type: SortType = this.state.sortType,\n    reversed: boolean = this.state.isReversed,\n  ) => {\n    this.setState({\n      isReversed: reversed,\n      sortType: type,\n    });\n  };\n\n  render() {\n    const goodsToRender = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div\n          className=\"buttons\"\n          role=\"directory\"\n        >\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.ALPHABET\n              ? 'button is-info' : 'button is-info is-light'}\n            onClick={() => {\n              this.sort(SortType.ALPHABET, false);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.LENGTH\n              ? 'button is-success' : 'button is-success is-light'}\n            onClick={() => {\n              this.sort(SortType.LENGTH, false);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed\n              ? 'button is-warning' : 'button is-warning is-light'}\n            onClick={() => {\n              this.sort(this.state.sortType, !this.state.isReversed);\n            }}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ isReversed: false, sortType: SortType.NONE });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsToRender.map(good => {\n              return (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}